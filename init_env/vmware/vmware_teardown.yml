---
# VMware specific cleanup begins here

- name: "Unregister rhis Env"
  hosts: all:!build_control
  remote_user: ansiblerunner
  become: true

  tasks:
    - name: Unregister
      community.general.redhat_subscription:
        state: absent
      ignore_errors: true 

- name: "Tear down rhis Env"
  hosts: build_control
  remote_user: ansiblerunner
  connection: local
  become: true

  tasks:

    - name: "Include vaulted vars"
      ansible.builtin.include_vars:
        file: "~/rhisbuilder_vault.yml"

    - name: "Include top level vars"
      ansible.builtin.include_vars:
        dir: "../vars"

    - name: "Cleaning up the following Virtual machines"
      ansible.builtin.debug:
        msg: "{{ item }}"
      with_inventory_hostnames:
        - all:!build_control

    - name: "Power off instances"
      community.vmware.vmware_guest_powerstate:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        name: "{{ item }}"
        state: "powered-off"
        validate_certs: "{{ vcenter_validate_certs }}"
      with_inventory_hostnames:
        - all:!build_control
      ignore_errors: true

    - name: "Remove instances"
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        name: "{{ item }}"
        cluster: "{{ vcenter_cluster }}"
        state: "absent"
        validate_certs: "{{ vcenter_validate_certs }}"
      with_inventory_hostnames:
        - all:!build_control
      ignore_errors: true

    - name: "Clean up known_hosts"
      ansible.builtin.file: 
        path: "/home/ansiblerunner/.ssh/known_hosts"
        state: absent

    - name: "Get the content of the runner's known_hosts"
      ansible.builtin.file:
        path: "/home/ansiblerunner/.ssh/known_hosts"
        state: touch

      
    
      